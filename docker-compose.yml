version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - MONGO_CONNECTION_STRING=${MONGO_CONNECTION_STRING}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis
    volumes:
      - ./app:/app
    networks:
      - smartrent-network

  # Redis for caching and rate limiting
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - smartrent-network

  # Hyperledger Fabric Network
  hyperledger-peer:
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
    ports:
      - "7051:7051"
    volumes:
      - ./crypto-config:/etc/hyperledger/msp
      - ./chaincode:/chaincode
    networks:
      - smartrent-network

  # Hyperledger Fabric CA
  fabric-ca:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.example.com
    ports:
      - "7054:7054"
    volumes:
      - ./fabric-ca:/etc/hyperledger/fabric-ca-server
    networks:
      - smartrent-network

  # Frontend Development Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_SOLANA_RPC_URL=${SOLANA_RPC_URL}
    networks:
      - smartrent-network

volumes:
  redis-data:

networks:
  smartrent-network:
    driver: bridge 