version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: ./backend
    restart: always
    env_file:
      - ./backend/.env.prod
    depends_on:
      db:
        condition: service_healthy
    # Use gunicorn for production
    command: gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    
  # React Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl

  # Nginx for SSL termination and reverse proxy
  # Uncomment if you want a separate Nginx for the API
  # nginx:
  #   image: nginx:alpine
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./ssl:/etc/nginx/ssl
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - backend
  #     - frontend
  #   restart: always

volumes:
  postgres_data: 